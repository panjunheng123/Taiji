{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","n","str","str2","step","setTimeout","innerHTML","substring","window","scrollTo","length"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,IAAI,CAAR;AACA,IAAIC,+nDAAJ;AA4DI;AACA;AACA;AACJ,IAAIC,OAAO,EAAX;;AAEA;AACA;;;AAIA,SAASC,IAAT,GAAgB;AACZC,eAAW,YAAW;AAClB;AACA,YAAIH,IAAID,CAAJ,MAAW,IAAf,EAAqB;AACjB;AACAE,oBAAQ,MAAR;AACH,SAHD,MAGO,IAAID,IAAID,CAAJ,MAAW,GAAf,EAAoB;AACvB;AACAE,oBAAQ,QAAR;AACH,SAHM,MAGA;AACH;AACAA,oBAAQD,IAAID,CAAJ,CAAR;AACH;;AAEDJ,aAAKS,SAAL,GAAiBH,IAAjB;AACAH,cAAMM,SAAN,GAAkBJ,IAAIK,SAAJ,CAAc,CAAd,EAAiBN,CAAjB,CAAlB;AACAO,eAAOC,QAAP,CAAgB,CAAhB,EAAmB,KAAnB;AACAZ,aAAKY,QAAL,CAAc,CAAd,EAAiB,KAAjB;;AAEA,YAAIR,IAAIC,IAAIQ,MAAJ,GAAa,CAArB,EAAwB;AACpBT;AACAG;AACH;AACJ,KAtBD,EAsBG,EAtBH;AAuBH;AACDA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"main.a206ebdf.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector('#html')\r\nlet style = document.querySelector('#style')\r\nlet n = 0\r\nlet str = `/* hello\r\n * 我们来做一个太极阴阳图\r\n * 首先准备一个 div\r\n */\r\n#div1{\r\n    border: 1px solid red;\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 然后，把 div 变成一个圆*/\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,.5);\r\n    border: none;\r\n}\r\n/* 太极图是由双阴阳鱼组成的\r\n * 一黑一白\r\n */\r\n#div1{\r\n    background: rgb(255,255,255);\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 画上阴阳鱼 */\r\n#div1::before{\r\n    width: 100px;\r\n    height: 100px;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    background: rgb(255,255,255);\r\n    background: rgb(0,0,0);\r\n    background: rgb(0,0,0);\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n#div1::after{\r\n    width: 100px;\r\n    height: 100px;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #000;\r\n    border-radius: 50%;\r\n    background: rgb(255,255,255);\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n/*最后让太极图动起来*/\r\n@keyframes x{\r\n    from{\r\n        transform: rotate(0deg);\r\n    }\r\n    to{\r\n        transform: rotate(360deg);\r\n    }\r\n}\r\n#div1{\r\n    animation: x 10s infinite linear;\r\n}\r\n`\r\n    // CSS 分号不能省略！\r\n    // CSS 分号不能省略！！\r\n    // CSS 分号不能省略！！！\r\nlet str2 = ''\r\n\r\n// str = str.replace(/\\n/g, \"<br>\")\r\n// 利用正则表达式和 replace 把所有回车改成换行，但是会先打出\"<\"，再回车\r\n\r\n\r\n\r\nfunction step() {\r\n    setTimeout(function() {\r\n        // str2 += str[n] === '\\n' ? '<br>' : str[n]\r\n        if (str[n] === '\\n') {\r\n            // 如果是回车就<br>\r\n            str2 += '<br>'\r\n        } else if (str[n] === ' ') {\r\n            // 如果是空格改成'&nbsp'\r\n            str2 += '&nbsp;'\r\n        } else {\r\n            // 否则就照搬\r\n            str2 += str[n]\r\n        }\r\n\r\n        html.innerHTML = str2\r\n        style.innerHTML = str.substring(0, n)\r\n        window.scrollTo(0, 99999)\r\n        html.scrollTo(0, 99999)\r\n\r\n        if (n < str.length - 1) {\r\n            n++\r\n            step()\r\n        }\r\n    }, 50)\r\n}\r\nstep()\r\n\r\n// let id = setInterval(() => {\r\n//     n++\r\n//     demo.innerHTML = n\r\n//     if (n = 10)\r\n//         clearInterval(id)\r\n// }, 1000)"]}